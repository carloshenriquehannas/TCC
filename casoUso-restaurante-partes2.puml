@startuml casoUso - restaurante - Partes 2
title Sistema de Restaurante — Casos de Uso - Partes 2

left to right direction
skinparam actorStyle awesome
skinparam packageStyle rectangle
skinparam usecase {
  BackgroundColor #FFFFFF
  BorderColor #555555
}

'=== Atores e herança ===
actor "Usuário do Sistema" as Usuario
actor "Cliente" as Cliente
actor "Funcionário" as Funcionario <<abstract>>
actor "Gerente" as Gerente
actor "Chef de Cozinha" as Chef
actor "Garçom" as Garcom
actor "Sistema" as AtorSistema <<system>>

Cliente     -|> Usuario
Funcionario -|> Usuario
Gerente     -|> Funcionario
Chef        -|> Funcionario
Garcom      -|> Funcionario

'=== Fronteira do sistema ===
rectangle "Sistema de Restaurante" as Sistema {

  '--- Núcleo: Reserva (agregação) ---
  usecase "Reserva" as UC_Reserva
  usecase "Realizar reserva de mesa" as UC_Reservar
  usecase "Visualizar reserva" as UC_VisualizarReserva     
  usecase "Cancelar minha reserva" as UC_CancelarReserva

  UC_Reserva ..> UC_Reservar : <<include>> obrigatório
  UC_VisualizarReserva ..> UC_Reserva : <<extend>> [reserva existente]
  UC_CancelarReserva ..> UC_Reserva : <<extend>> [reserva confirmada]

  '--- Núcleo: Pedido (agregação) ---
  usecase "Pedido" as UC_Pedido
  usecase "Fazer pedido" as UC_FazerPedido
  usecase "Alterar o meu pedido" as UC_AlterarPedido
  usecase "Visualizar status de pedidos" as UC_VisualizarStatusPedidos  

  UC_Pedido ..> UC_FazerPedido : <<include>> obrigatório
  UC_AlterarPedido ..> UC_Pedido : <<extend>> [pedido em andamento]
  UC_VisualizarStatusPedidos ..> UC_Pedido : <<extend>> [pedido criado]

  '--- Outros casos (Cliente) ---
  usecase "Ver o cardápio" as UC_VerCardapio
  usecase "Avaliar a experiência" as UC_Avaliar
  UC_FazerPedido ..> UC_VerCardapio : <<include>>  

  '--- Casos do Gerente ---
  usecase "Verificar disponibilidade de mesas" as UC_VerifMesas
  usecase "Verificar quantidade de clientes na loja" as UC_VerifClientes
  usecase "Gerenciar estoque (itens do cardápio)" as UC_GerenciarEstoque
  usecase "Verificar nível de satisfação dos clientes" as UC_VerifSatisfacao

  UC_VerifMesas ..> UC_Reserva : <<include>> usa dados de reservas
  UC_VerifClientes ..> UC_Pedido : <<include>> usa pedidos ativos
  UC_GerenciarEstoque ..> UC_VerCardapio : <<include>> sincroniza com cardápio
  UC_VerifSatisfacao ..> UC_Avaliar : <<include>> usa avaliações dos clientes

  '--- Casos do Chef de Cozinha ---
  usecase "Solicitar entrega de prato pronto" as UC_SolicitarEntrega
  usecase "Gerenciar ordens por prioridade" as UC_GerenciarPrioridade
  usecase "Solicitar novos ingredientes" as UC_SolicitarIngredientes
  usecase "Notificar garçom para entrega" as UC_NotificarGarcom

  UC_SolicitarEntrega ..> UC_NotificarGarcom : <<include>> obrigatório
  UC_NotificarGarcom ..> UC_Pedido : <<include>> contexto do pedido
  UC_GerenciarPrioridade ..> UC_Pedido : <<include>> fila/tempo de espera
  UC_SolicitarIngredientes ..> UC_GerenciarEstoque : <<include>> checar/suprir itens

  '--- Casos do Garçom ---
  usecase "Registrar pedido no sistema (garçom)" as UC_RegistrarPedidoGarcom
  UC_RegistrarPedidoGarcom ..> UC_FazerPedido : <<include>> criar pedido
  UC_RegistrarPedidoGarcom ..> UC_VerCardapio : <<include>> consultar cardápio

  '--- Casos do ator Sistema (automação/UX) ---
  usecase "Notificações (via interface)" as UC_Notificacoes
  usecase "Enviar alerta de alérgenos" as UC_NotifAlergenos
  usecase "Enviar ofertas" as UC_NotifOfertas
  usecase "Notificar alterações no pedido" as UC_NotifAlteracoesPedido
  usecase "Disponibilizar pagamento online" as UC_PagamentoOnline

  'Agregação de notificações
  UC_Notificacoes ..> UC_NotifAlergenos : <<include>>
  UC_Notificacoes ..> UC_NotifOfertas : <<include>>
  UC_Notificacoes ..> UC_NotifAlteracoesPedido : <<include>>

  'Dependências funcionais das notificações
  UC_NotifAlergenos ..> UC_VerCardapio : <<include>> base em ingredientes
  UC_NotifOfertas ..> UC_VerCardapio : <<include>> promoções do cardápio
  UC_NotifAlteracoesPedido ..> UC_Pedido : <<include>> mudanças de status/itens

  'Pagamento online oferecido de forma opcional no fluxo do pedido
  UC_FazerPedido ..> UC_PagamentoOnline : <<extend>> [pagamento online selecionado]
}

'=== Ligações dos atores aos casos ===
Cliente --> UC_Reserva
Cliente --> UC_VisualizarReserva
Cliente --> UC_Pedido
Cliente --> UC_VisualizarStatusPedidos
Cliente --> UC_VerCardapio
Cliente --> UC_Avaliar

Gerente --> UC_VerifMesas
Gerente --> UC_VerifClientes
Gerente --> UC_GerenciarEstoque
Gerente --> UC_VerifSatisfacao

Chef --> UC_SolicitarEntrega
Chef --> UC_GerenciarPrioridade
Chef --> UC_SolicitarIngredientes

Garcom --> UC_NotificarGarcom
Garcom --> UC_RegistrarPedidoGarcom
Garcom --> UC_VisualizarStatusPedidos
Garcom --> UC_VisualizarReserva

'Ator Sistema executa automações de UX
AtorSistema --> UC_Notificacoes
AtorSistema --> UC_PagamentoOnline

legend left
  <<include>> = passo obrigatório / dependência funcional
  <<extend>>  = passo opcional, executado sob condição

  Novidades:
  - Ator "Sistema" (<<system>>) envia notificações via interface:
      * alerta de alérgenos
      * ofertas
      * alterações no pedido
  - "Disponibilizar pagamento online" como opção no fluxo de "Fazer pedido"
endlegend

@enduml
